{"ast":null,"code":"var _jsxFileName = \"E:\\\\CivicConnect\\\\admin\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\n * Authentication Context\n * Provides authentication state and methods to the app\n */\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        // Set auth header\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Verify token and get user data\n        const response = await axios.get(`${API_URL}/api/users/me`);\n        if (response.data.success) {\n          setUser(response.data.data.user);\n          setIsAuthenticated(true);\n        } else {\n          // Clear invalid token\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      } catch (err) {\n        console.error('Auth check error:', err);\n        // Clear invalid token\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await axios.post(`${API_URL}/api/auth/login`, {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          data\n        } = response.data;\n\n        // Save token to localStorage\n        localStorage.setItem('token', token);\n\n        // Set auth header\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Update state\n        setUser(data.user);\n        setIsAuthenticated(true);\n        return true;\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n      return false;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Remove auth header\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      setError(null);\n      const response = await axios.patch(`${API_URL}/api/users/profile`, userData);\n      if (response.data.success) {\n        setUser(response.data.data.user);\n        return true;\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Profile update failed');\n      return false;\n    }\n  };\n\n  // Context value\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"AaZCefjEQIISzggwPe9U62ieYJk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","checkLoggedIn","token","localStorage","getItem","defaults","headers","common","response","get","data","success","removeItem","err","console","login","email","password","post","setItem","_err$response","_err$response$data","message","logout","updateProfile","userData","patch","_err$response2","_err$response2$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/CivicConnect/admin/src/context/AuthContext.js"],"sourcesContent":["/**\n * Authentication Context\n * Provides authentication state and methods to the app\n */\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\n// Create context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        \n        if (!token) {\n          setLoading(false);\n          return;\n        }\n        \n        // Set auth header\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        \n        // Verify token and get user data\n        const response = await axios.get(`${API_URL}/api/users/me`);\n        \n        if (response.data.success) {\n          setUser(response.data.data.user);\n          setIsAuthenticated(true);\n        } else {\n          // Clear invalid token\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      } catch (err) {\n        console.error('Auth check error:', err);\n        // Clear invalid token\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    checkLoggedIn();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      \n      const response = await axios.post(`${API_URL}/api/auth/login`, {\n        email,\n        password\n      });\n      \n      if (response.data.success) {\n        const { token, data } = response.data;\n        \n        // Save token to localStorage\n        localStorage.setItem('token', token);\n        \n        // Set auth header\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        \n        // Update state\n        setUser(data.user);\n        setIsAuthenticated(true);\n        \n        return true;\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || 'Login failed');\n      return false;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    \n    // Remove auth header\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      setError(null);\n      \n      const response = await axios.patch(`${API_URL}/api/users/profile`, userData);\n      \n      if (response.data.success) {\n        setUser(response.data.data.user);\n        return true;\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || 'Profile update failed');\n      return false;\n    }\n  };\n\n  // Context value\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    logout,\n    updateProfile\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}